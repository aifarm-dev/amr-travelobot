[0.145s] Invoking command in '/home/dr/amr-travelobot/ros_ws/build/rplidar_ros2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/dr/amr-travelobot/ros_ws/install/bno055:/opt/ros/galactic /usr/bin/cmake /home/dr/amr-travelobot/ros_ws/src/rplidar_ros -DCMAKE_INSTALL_PREFIX=/home/dr/amr-travelobot/ros_ws/install/rplidar_ros2
[1.103s] -- The C compiler identification is GNU 9.4.0
[1.590s] -- The CXX compiler identification is GNU 9.4.0
[1.669s] -- Check for working C compiler: /usr/bin/cc
[1.996s] -- Check for working C compiler: /usr/bin/cc -- works
[2.006s] -- Detecting C compiler ABI info
[2.323s] -- Detecting C compiler ABI info - done
[2.396s] -- Detecting C compile features
[2.398s] -- Detecting C compile features - done
[2.410s] -- Check for working CXX compiler: /usr/bin/c++
[2.741s] -- Check for working CXX compiler: /usr/bin/c++ -- works
[2.748s] -- Detecting CXX compiler ABI info
[3.106s] -- Detecting CXX compiler ABI info - done
[3.160s] -- Detecting CXX compile features
[3.163s] -- Detecting CXX compile features - done
[3.179s] -- Found ament_cmake: 1.1.5 (/opt/ros/galactic/share/ament_cmake/cmake)
[3.333s] -- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") 
[3.334s] -- Using PYTHON_EXECUTABLE: /usr/bin/python3
[3.860s] -- Found rclcpp: 9.2.1 (/opt/ros/galactic/share/rclcpp/cmake)
[4.293s] -- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
[4.354s] -- Found rosidl_adapter: 2.2.2 (/opt/ros/galactic/share/rosidl_adapter/cmake)
[5.181s] -- Found OpenSSL: /usr/lib/aarch64-linux-gnu/libcrypto.so (found version "1.1.1f")  
[5.387s] -- Found FastRTPS: /opt/ros/galactic/include  
[5.947s] -- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
[6.330s] -- Found rmw_implementation_cmake: 3.3.1 (/opt/ros/galactic/share/rmw_implementation_cmake/cmake)
[6.355s] -- Found rmw_cyclonedds_cpp: 0.22.5 (/opt/ros/galactic/share/rmw_cyclonedds_cpp/cmake)
[6.471s] -- Using RMW implementation 'rmw_cyclonedds_cpp' as default
[6.477s] -- Looking for pthread.h
[6.848s] -- Looking for pthread.h - found
[6.850s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
[7.207s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
[7.208s] -- Looking for pthread_create in pthreads
[7.491s] -- Looking for pthread_create in pthreads - not found
[7.492s] -- Looking for pthread_create in pthread
[7.818s] -- Looking for pthread_create in pthread - found
[7.823s] -- Found Threads: TRUE  
[8.629s] -- Found sensor_msgs: 2.2.4 (/opt/ros/galactic/share/sensor_msgs/cmake)
[9.253s] -- Found std_srvs: 2.2.4 (/opt/ros/galactic/share/std_srvs/cmake)
[9.688s] -- Configuring done
[9.753s] -- Generating done
[9.760s] -- Build files have been written to: /home/dr/amr-travelobot/ros_ws/build/rplidar_ros2
[10.792s] Invoked command in '/home/dr/amr-travelobot/ros_ws/build/rplidar_ros2' returned '0': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/dr/amr-travelobot/ros_ws/install/bno055:/opt/ros/galactic /usr/bin/cmake /home/dr/amr-travelobot/ros_ws/src/rplidar_ros -DCMAKE_INSTALL_PREFIX=/home/dr/amr-travelobot/ros_ws/install/rplidar_ros2
[10.800s] Invoking command in '/home/dr/amr-travelobot/ros_ws/build/rplidar_ros2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/dr/amr-travelobot/ros_ws/install/bno055:/opt/ros/galactic /usr/bin/cmake --build /home/dr/amr-travelobot/ros_ws/build/rplidar_ros2 -- -j4 -l4
[11.131s] [35m[1mScanning dependencies of target rplidar_scan_publisher[0m
[11.589s] [ 14%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/src/rplidar_scan_publisher.cpp.o[0m
[11.605s] [ 42%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/arch/linux/net_socket.cpp.o[0m
[11.606s] [ 42%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/arch/linux/timer.cpp.o[0m
[11.673s] [ 57%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/arch/linux/net_serial.cpp.o[0m
[14.791s] In file included from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar.h:39[m[K,
[14.792s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/src/sdkcommon.h:48[m[K,
[14.793s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/sdk/src/arch/linux/net_socket.cpp:10[m[K:
[14.794s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar_protocol.h:59:14:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[14.794s]    59 |     _u8 data[[01;35m[K0[m[K];
[14.795s]       |              [01;35m[K^[m[K
[14.795s] In file included from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar.h:40[m[K,
[14.796s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/src/sdkcommon.h:48[m[K,
[14.796s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/sdk/src/arch/linux/net_socket.cpp:10[m[K:
[14.797s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar_cmd.h:260:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[14.797s]   260 |     _u8  payload[[01;35m[K0[m[K];
[14.798s]       |                  [01;35m[K^[m[K
[15.460s] [ 71%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/hal/thread.cpp.o[0m
[16.297s] [ 85%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/rplidar_driver.cpp.o[0m
[18.421s] In file included from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar.h:39[m[K,
[18.422s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/src/sdkcommon.h:48[m[K,
[18.423s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/sdk/src/hal/thread.cpp:35[m[K:
[18.423s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar_protocol.h:59:14:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[18.424s]    59 |     _u8 data[[01;35m[K0[m[K];
[18.424s]       |              [01;35m[K^[m[K
[18.425s] In file included from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar.h:40[m[K,
[18.426s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/src/sdkcommon.h:48[m[K,
[18.426s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/sdk/src/hal/thread.cpp:35[m[K:
[18.429s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar_cmd.h:260:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[18.433s]   260 |     _u8  payload[[01;35m[K0[m[K];
[18.434s]       |                  [01;35m[K^[m[K
[18.447s] In file included from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/sdk/src/hal/thread.cpp:43[m[K:
[18.448s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/src/arch/linux/thread.hpp:[m[K In static member function â€˜[01m[Kstatic rp::hal::Thread rp::hal::Thread::create(thread_proc_t, void*)[m[Kâ€™:
[18.448s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/src/arch/linux/thread.hpp:48:77:[m[K [01;35m[Kwarning: [m[Kcast between incompatible function types from â€˜[01m[Kthread_proc_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int (*)(void*)[m[Kâ€™} to â€˜[01m[Kvoid* (*)(void*)[m[Kâ€™ [[01;35m[K-Wcast-function-type[m[K]
[18.453s]    48 |     pthread_create((pthread_t *)&newborn._handle, NULL, (void * (*)(void *))[01;35m[Kproc[m[K, data);
[18.454s]       |                                                                             [01;35m[K^~~~[m[K
[19.560s] In file included from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar.h:39[m[K,
[19.561s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/sdk/src/sdkcommon.h:48[m[K,
[19.562s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/sdk/src/rplidar_driver.cpp:35[m[K:
[19.562s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar_protocol.h:59:14:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[19.563s]    59 |     _u8 data[[01;35m[K0[m[K];
[19.563s]       |              [01;35m[K^[m[K
[19.564s] In file included from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar.h:40[m[K,
[19.565s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/sdk/src/sdkcommon.h:48[m[K,
[19.566s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/sdk/src/rplidar_driver.cpp:35[m[K:
[19.566s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar_cmd.h:260:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[19.567s]   260 |     _u8  payload[[01;35m[K0[m[K];
[19.568s]       |                  [01;35m[K^[m[K
[20.444s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/sdk/src/rplidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual void rp::standalone::rplidar::RPlidarDriverImplCommon::_ultraCapsuleToNormal(const rplidar_response_ultra_capsule_measurement_nodes_t&, rplidar_response_measurement_node_hq_t*, size_t&)[m[Kâ€™:
[20.445s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/sdk/src/rplidar_driver.cpp:1208:32:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kunsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
[20.446s]  1208 |             if (([01;35m[Kdist_predict1 == 0xFFFFFE00[m[K) || (dist_predict1 == 0x1FF)) {
[20.447s]       |                  [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~[m[K
[20.448s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/sdk/src/rplidar_driver.cpp:1216:32:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kunsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
[20.449s]  1216 |             if (([01;35m[Kdist_predict2 == 0xFFFFFE00[m[K) || (dist_predict2 == 0x1FF)) {
[20.450s]       |                  [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~[m[K
[25.513s] In file included from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar.h:39[m[K,
[25.514s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:38[m[K:
[25.514s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar_protocol.h:59:14:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[25.515s]    59 |     _u8 data[[01;35m[K0[m[K];
[25.516s]       |              [01;35m[K^[m[K
[25.517s] In file included from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar.h:40[m[K,
[25.517s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:38[m[K:
[25.518s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/./sdk/include/rplidar_cmd.h:260:18:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[25.518s]   260 |     _u8  payload[[01;35m[K0[m[K];
[25.519s]       |                  [01;35m[K^[m[K
[25.576s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:[m[K In member function â€˜[01m[Kvoid RPLidarScanPublisher::init_param()[m[Kâ€™:
[25.576s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:67:47:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[25.577s]    67 |         this->declare_parameter("channel_type"[01;35m[K)[m[K;
[25.577s]       |                                               [01;35m[K^[m[K
[25.578s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[25.578s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[25.579s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[25.579s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:35[m[K:
[25.579s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[25.580s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[25.580s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[25.583s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:68:41:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[25.583s]    68 |         this->declare_parameter("tcp_ip"[01;35m[K)[m[K;
[25.584s]       |                                         [01;35m[K^[m[K
[25.584s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[25.585s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[25.585s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[25.585s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:35[m[K:
[25.586s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[25.586s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[25.587s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[25.587s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:69:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[25.588s]    69 |         this->declare_parameter("tcp_port"[01;35m[K)[m[K;
[25.588s]       |                                           [01;35m[K^[m[K
[25.588s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[25.589s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[25.590s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[25.590s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:35[m[K:
[25.591s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[25.591s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[25.592s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[25.592s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:70:46:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[25.593s]    70 |         this->declare_parameter("serial_port"[01;35m[K)[m[K;
[25.593s]       |                                              [01;35m[K^[m[K
[25.594s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[25.594s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[25.595s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[25.595s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:35[m[K:
[25.596s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[25.596s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[25.596s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[25.597s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:71:50:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[25.598s]    71 |         this->declare_parameter("serial_baudrate"[01;35m[K)[m[K;
[25.598s]       |                                                  [01;35m[K^[m[K
[25.599s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[25.599s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[25.600s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[25.600s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:35[m[K:
[25.601s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[25.601s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[25.602s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[25.602s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:72:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[25.602s]    72 |         this->declare_parameter("frame_id"[01;35m[K)[m[K;
[25.603s]       |                                           [01;35m[K^[m[K
[25.603s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[25.604s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[25.604s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[25.605s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:35[m[K:
[25.605s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[25.606s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[25.606s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[25.607s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:73:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[25.607s]    73 |         this->declare_parameter("inverted"[01;35m[K)[m[K;
[25.607s]       |                                           [01;35m[K^[m[K
[25.608s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[25.609s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[25.609s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[25.610s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:35[m[K:
[25.610s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[25.611s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[25.611s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[25.611s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:74:51:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[25.612s]    74 |         this->declare_parameter("angle_compensate"[01;35m[K)[m[K;
[25.612s]       |                                                   [01;35m[K^[m[K
[25.613s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[25.613s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[25.614s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[25.614s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:35[m[K:
[25.616s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[25.616s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[25.617s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[25.617s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:75:44:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[25.618s]    75 |         this->declare_parameter("scan_mode"[01;35m[K)[m[K;
[25.618s]       |                                            [01;35m[K^[m[K
[25.619s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[25.619s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[25.620s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[25.620s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:35[m[K:
[25.621s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[25.621s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[25.622s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[25.764s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/client.hpp:40[m[K,
[25.765s]                  from [01m[K/opt/ros/galactic/include/rclcpp/callback_group.hpp:23[m[K,
[25.766s]                  from [01m[K/opt/ros/galactic/include/rclcpp/any_executable.hpp:20[m[K,
[25.766s]                  from [01m[K/opt/ros/galactic/include/rclcpp/memory_strategy.hpp:25[m[K,
[25.766s]                  from [01m[K/opt/ros/galactic/include/rclcpp/memory_strategies.hpp:18[m[K,
[25.767s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executor_options.hpp:20[m[K,
[25.767s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executor.hpp:36[m[K,
[25.768s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
[25.768s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:21[m[K,
[25.769s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[25.770s]                  from [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:35[m[K:
[25.770s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:[m[K In member function â€˜[01m[Kint RPLidarScanPublisher::work_loop()[m[Kâ€™:
[25.771s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:336:44:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 8 has type â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wformat=[m[K]
[25.771s]   336 |             RCLCPP_INFO(this->get_logger(),[01;35m[K"current scan mode: %s, max_distance: %.1f m, Point number: %.1fK , angle_compensate: %d"[m[K,current_scan_mode.scan_mode,
[25.772s]       |                                            [01;35m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[25.773s]   337 |                     current_scan_mode.max_distance, (1000/current_scan_mode.us_per_sample), [32m[Kangle_compensate_multiple[m[K);
[25.773s]       |                                                                                             [32m[K~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[25.774s]       |                                                                                             [32m[K|[m[K
[25.774s]       |                                                                                             [32m[Ksize_t {aka long unsigned int}[m[K
[25.775s] [01m[K/home/dr/amr-travelobot/ros_ws/src/rplidar_ros/src/rplidar_scan_publisher.cpp:336:131:[m[K [01;36m[Knote: [m[Kformat string is defined here
[25.776s]   336 |             RCLCPP_INFO(this->get_logger(),"current scan mode: %s, max_distance: %.1f m, Point number: %.1fK , angle_compensate: [01;36m[K%d[m[K",current_scan_mode.scan_mode,
[25.776s]       |                                                                                                                                  [01;36m[K~^[m[K
[25.777s]       |                                                                                                                                   [01;36m[K|[m[K
[25.777s]       |                                                                                                                                   [01;36m[Kint[m[K
[25.778s]       |                                                                                                                                  [32m[K%ld[m[K
[36.604s] [100%] [32m[1mLinking CXX executable rplidar_scan_publisher[0m
[37.754s] [100%] Built target rplidar_scan_publisher
