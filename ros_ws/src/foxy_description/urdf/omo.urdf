<?xml version="1.0"?>
<robot name="sam_bot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Define robot constants -->
  <xacro:property name="base_width" value="0.6"/>
  <xacro:property name="base_length" value="1"/>
  <xacro:property name="base_height" value="0.8"/>
  <!-- Wheel -->
  <xacro:property name="wheel_radius" value="0.1"/>
  <xacro:property name="wheel_width" value="0.06"/>
  <xacro:property name="wheel_ygap" value="0.21"/>
  <xacro:property name="wheel_zoff" value="0.4"/>
  <xacro:property name="wheel_xoff" value="0.22"/>
  <!-- caster -->
  <xacro:property name="caster_xoff" value="0.27"/>
  <xacro:property name="caster_raduis_yaw" value="0.05"/>
  <xacro:property name="caster_width_yaw" value="0.014"/>
  <xacro:property name="caster_raduis_pitch" value="0.1"/>

  <!-- cylinder -->
  <xacro:property name="cylinder_height" value="0.6"/>
  <xacro:property name="cylinder_raduis" value="0.1"/>
  <xacro:property name="cylinder_xoff" value="0.4"/>
  <xacro:property name="cylinder_zoff" value="0.3"/>

  <!-- laserScan -->
  <xacro:property name="laser_height" value="0.02"/>
  <xacro:property name="laser_length" value="0.02"/>
  <xacro:property name="laser_width" value="0.02"/>
  <xacro:property name="laser_xoff" value="0.4"/>
  <xacro:property name="laser_zoff" value="0.01"/>
  
<xacro:property name="effort" value="300"/>
<xacro:property name="velocity" value="0.5"/>
<xacro:property name="lower" value="-3.14"/>
<xacro:property name="upper" value="3.14"/>


  <!-- function base_inertia -->
  <xacro:macro name="base_inertia" params="m d w h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>
  <!-- function wheel_inertia -->
  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>
  <!-- function caster_inertia -->
  <xacro:macro name="caster_inertia" params="m r">   
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>         
  </xacro:macro>

  <xacro:macro name="caster_front" params="m r h" >
    <mass value="${m}"/>
    <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
  </xacro:macro>

  <!-- function cylinder_inertia -->
  <xacro:macro name="cylinder_a" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>


    <!-- Robot Base -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>
    
    <xacro:base_inertia m="8" d="${base_length}" w="${base_width}" h="${base_height}"/>
  </link>

  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="Gray">
          <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="1" r="${wheel_radius}" h="${wheel_width}"/>
    </link>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*wheel_ygap} ${-wheel_zoff}" rpy="0 0 0"/>
      <!-- <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0"/> -->
      <!-- <limit effort="${effort}" velocity="${velocity}" lower="${lower}" upper="${upper}"/> -->
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />


   
   <link name="front_caster">
    <visual>
    <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
     
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="1.57 0 0"/>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
    </collision>
    <xacro:caster_inertia m="10.05" r="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
  </link>

  <gazebo reference="front_caster">
    <mu1>0.01</mu1>
    <mu2>0.01</mu2>
    <material>Gazebo/White</material>
  </gazebo>
  
  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_caster"/>
    <origin xyz="${caster_xoff} 0.0 ${-(base_height/2)}" rpy="0 0 0"/>
  </joint>

  <!-- cylinder on robot  -->
  <link name="cylinder">
    <visual>
      <geometry>
        <cylinder radius="${cylinder_raduis}" length="${cylinder_height}"/>
      </geometry>
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${cylinder_raduis}" length="${cylinder_height}"/>
      </geometry>
    </collision>
    <xacro:cylinder_a m="0.01" r="${cylinder_raduis}" h="${cylinder_height}"/>
  </link>

  <joint name="cylinder_joint" type="fixed">
    <parent link="base_link"/>
    <child link="cylinder"/>
    <origin xyz="${cylinder_xoff} 0.0 ${base_height/2 +cylinder_zoff}" rpy="0 0 0"/>
  </joint>



<!-- JOINT PUBLISHER -->
  <gazebo>
    <plugin name="box_bot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
          <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>drivewhl_l_joint</joint_name>
      <joint_name>drivewhl_r_joint</joint_name>
      <joint_name>caster_joint</joint_name>     
    </plugin>
  </gazebo>

<gazebo>
  <plugin name='diff_drive' filename='libgazebo_ros_diff_drive.so'>
    <!-- <ros>
      <namespace>/demo</namespace>
    </ros> -->

    <!-- wheels -->
    <left_joint>drivewhl_l_joint</left_joint>
    <right_joint>drivewhl_r_joint</right_joint>


    <!-- kinematics -->
    <wheel_separation>0.4</wheel_separation>
    <wheel_diameter>0.2</wheel_diameter>

    <!-- limits -->
    <max_wheel_torque>20</max_wheel_torque>
    <max_wheel_acceleration>1.0</max_wheel_acceleration>

    <!-- output -->
    <publish_odom>true</publish_odom>
    <publish_odom_tf>true</publish_odom_tf>
    <publish_wheel_tf>false</publish_wheel_tf>
    <publishWheelJointState>false</publishWheelJointState>
    <legacyMode>true</legacyMode>

    <odometry_frame>odom</odometry_frame>
    <odometry_Topic>odom</odometry_Topic>
    <robot_base_frame>base_link</robot_base_frame>
  </plugin>
</gazebo>

  <link name="lidar_link">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="0.125"/>
      <inertia ixx="0.001"  ixy="0"  ixz="0" iyy="0.001" iyz="0" izz="0.001" />
    </inertial>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
         <cylinder radius="0.0508" length="0.055"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
         <cylinder radius="0.0508" length="0.055"/>
      </geometry>
    </visual>
  </link>
    
  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="${cylinder_xoff} 0.0 ${base_height/2+cylinder_height}" rpy="0 0 0"/>
  </joint>
  
   <gazebo reference="lidar_link">
    <sensor name="lidar" type="ray">
      <always_on>true</always_on>
      <visualize>true</visualize>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1.000000</resolution>
            <min_angle>0.000000</min_angle>
            <max_angle>6.280000</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120000</min>
          <max>3.5</max>
          <resolution>0.015000</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

</robot>